# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Test Workflow

on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI

permissions: read-all
      
jobs:
  build:
    permissions: 
      checks: write
    runs-on: ubuntu-latest

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09 # v2.5.1
      with:
        egress-policy: audit

    - name: Checkout Code
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@3447fd6a9f9e57506b15f895c5b76d3b197dc7c2 # v3.2.0
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Run tests and generate code coverage XML report
      run: dotnet test --logger trx --collect:"XPlat Code Coverage"
    - name: Restore local tools
      run: dotnet tool restore
 
    - name: Generate code coverage Markdown report
      run: dotnet reportgenerator -reports:**/coverage.cobertura.xml -targetdir:./coverage -reporttypes:MarkdownSummary
     
    - name: Create check run with code coverage Markdown report
      uses: LouisBrunner/checks-action@c6dbaea4f9c79ccfe67c038acddaf713518b255d # v1.6.2
      if: always()
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Code coverage
        conclusion: ${{ job.status }}
        output: '{"summary":"Code coverage"}'
        output_text_description_file: coverage/Summary.md

    - name: Lint Code Base
      uses: super-linter/super-linter@962a6409c1b303d0e53a9d34ada577a0362f4fae # v5.2.1
      env:
        VALIDATE_CSHARP: true
        VALIDATE_ALL_CODEBASE: true
        DEFAULT_BRANCH: master
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
