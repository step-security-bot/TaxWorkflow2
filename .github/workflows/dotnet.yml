name: publish
on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI

env:
  NuGetDirectory: ${{ github.workspace}}/nuget

jobs:
  create_nuget:
    runs-on: ubuntu-latest
    outputs:
      newTag: ${{ steps.tag_version.outputs.new_tag }}
  
    steps:
    - uses: actions/checkout@v3
  
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: ""
  
    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}
  
    - name: Set output
      id: settingNewTagOutput
      run: |
        echo "newTag='${{ steps.tag_version.outputs.new_tag }}'" >> $GITHUB_OUTPUT

  changelog:
    runs-on: ubuntu-latest   
    needs: create_nuget
    steps:
      - uses: actions/checkout@v3

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.7.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-version-file: 'true'

  pack_nuget:
    runs-on: ubuntu-latest
    needs: create_nuget
    steps:
    - uses: actions/checkout@v3

    - name: pack nuget package
      run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }} -p:PackageVersion=${{ needs.create_nuget.outputs.newTag }}

    # Publish the NuGet package as an artifact, so they can be used in the following jobs
    - uses: actions/upload-artifact@v3
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg
      
  deploy:
    runs-on: ubuntu-latest
    needs: pack_nuget
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Create github-feed
        run: dotnet nuget add source --username AK2083 --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/AK2083/index.json"
      - name: Publish NuGet package
        run: dotnet nuget push "${{ env.NuGetDirectory }}/*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source "github" --skip-duplicate
